{
	"info": {
		"_postman_id": "ab9d11ba-c839-4850-84a2-1b535eb43c02",
		"name": "Aeropuertos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15551750"
	},
	"item": [
		{
			"name": "Crear un aeropuerto v치lido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"airport_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Prueba\",\n    \"code\":\"ABC\",\n    \"country\":\"Pais prueba\",\n    \"city\":\"Ciudad prueba\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Crear un aeropuerto v치lido",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Prueba\",\n    \"code\":\"ABC\",\n    \"country\":\"Pais prueba\",\n    \"city\":\"Ciudad prueba\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "84"
						},
						{
							"key": "ETag",
							"value": "W/\"54-n/8dkXRXvrpFGjT5Np3YfCECnp0\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 18:31:20 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Prueba\",\n    \"code\": \"ABC\",\n    \"country\": \"Pais prueba\",\n    \"city\": \"Ciudad prueba\",\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "Crear un aeropuerto inv치lido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Prueba\",\n    \"code\":\"ABCD\",\n    \"country\":\"Pais prueba\",\n    \"city\":\"Ciudad prueba\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Crear un aeropuerto inv치lido",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Prueba\",\n    \"code\":\"ABCD\",\n    \"country\":\"Pais prueba\",\n    \"city\":\"Ciudad prueba\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "105"
						},
						{
							"key": "ETag",
							"value": "W/\"69-GLuljuMAymMiYm+ylHKeH1nWphQ\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 18:31:31 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 400,\n    \"message\": [\n        \"code must be shorter than or equal to 3 characters\"\n    ],\n    \"error\": \"Bad Request\"\n}"
				}
			]
		},
		{
			"name": "Obtener todos los aeropuertos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todos los aeropuertos",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "992"
						},
						{
							"key": "ETag",
							"value": "W/\"3e0-LpKWyPBLY+XuKFLWuKZlm/blV38\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 18:31:59 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 10,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 1,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Prueba\",\n        \"code\": \"ABC\",\n        \"country\": \"Pais prueba\",\n        \"city\": \"Ciudad prueba\",\n        \"airlines\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un aeropuerto por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports/{{airport_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports",
						"{{airport_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un aeropuerto por ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "98"
						},
						{
							"key": "ETag",
							"value": "W/\"62-jEvyx7LrHeEf/aw6Jk6K2uSEfIg\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 18:32:05 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Prueba\",\n    \"code\": \"ABC\",\n    \"country\": \"Pais prueba\",\n    \"city\": \"Ciudad prueba\",\n    \"airlines\": []\n}"
				}
			]
		},
		{
			"name": "Obtener un aeropuerto por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports/0",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un aeropuerto por un ID que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports/0",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "ETag",
							"value": "W/\"4a-RLtwopeukeJcdNCQI8lVdlt6kCc\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 20:13:18 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Prueba editar\",\n    \"code\":\"ABC\",\n    \"country\":\"Pais nueva prueba\",\n    \"city\":\"Ciudad nueva prueba prueba\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports/{{airport_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports",
						"{{airport_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar un aeropuerto",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Prueba editar\",\n    \"code\":\"ABC\",\n    \"country\":\"Pais nueva prueba\",\n    \"city\":\"Ciudad nueva prueba prueba\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "110"
						},
						{
							"key": "ETag",
							"value": "W/\"6e-COMwJdc/kGiW6vH16hnnozQvn/E\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 18:32:22 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Prueba editar\",\n    \"code\": \"ABC\",\n    \"country\": \"Pais nueva prueba\",\n    \"city\": \"Ciudad nueva prueba prueba\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un aeropuerto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Prueba editar\",\n    \"code\":\"ABC\",\n    \"country\":\"Pais nueva prueba\",\n    \"city\":\"Ciudad nueva prueba prueba\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports/0",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar un aeropuerto con un ID que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Prueba editar\",\n    \"code\":\"ABC\",\n    \"country\":\"Pais nueva prueba\",\n    \"city\":\"Ciudad nueva prueba prueba\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports/0",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "ETag",
							"value": "W/\"4a-RLtwopeukeJcdNCQI8lVdlt6kCc\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 20:12:45 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Eliminar un aeropuerto por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports/{{airport_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports",
						"{{airport_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un aeropuerto por su ID",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports",
								"1"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 18:32:49 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar un aeropuerto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:{{port}}/{{prefix}}/airports/0",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"{{prefix}}",
						"airports",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un aeropuerto con un ID que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/{{prefix}}/airports/0",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"{{prefix}}",
								"airports",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "ETag",
							"value": "W/\"4a-RLtwopeukeJcdNCQI8lVdlt6kCc\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 20:12:10 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "3000",
			"type": "string"
		},
		{
			"key": "prefix",
			"value": "api/v1",
			"type": "string"
		},
		{
			"key": "controller",
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}